In order to make analysis harder, this malware uses encrypted strings. They are decrypted on fly, just before they are needed. As you can see at the above screenshot – it is implemented with the help of small in-line routine using SSE (highlighted in the picture).
These techniques, while not particularly sophisticated, caught our attention as they had not been seen before in-the-wild. The first technique involved using the built-in ‘certutil’ utility in Microsoft Windows to extract a hardcoded payload within a macro. The second technique involved embedding Base64-encoded payloads within the EXIF metadata of the malicious documents.
In order to find the cause of the heuristics trigger, we need to do a static analysis of the driver itself. In the DriverEntry function it first decodes the device object name string in memory, and then creates the device Htsysm7838. The other two encoded strings – bandainamcoonline and bandainamcoonline.sys – are not used in the driver.
Several months after an attack the analysis of logs becomes a gamble because they are rotated over time. Hard drives store a lot of needed data and, depending on its activity, forensic specialists may extract data up to a year after an incident. That’s why attackers are using anti-forensic techniques (or simply SDELETE) and memory-based malware to hide their activity during data acquisition.
The first two parameters are taken from the configuration data. The third one is encrypted and after decryption, decompression, decoding and beautifying, it looks like this. $[para].
$[para]. encryption or decryption with hardcoded RSA keys. $[para].
i will show some of the possible unpacking methods next. decrypting the payload. during the static analysis, we found out the following information.
One of two scenarios will likely play out should anybody bother to reply. Either the scammers will extract financial information from the victim and attempt to steal some money, or they’ll start dropping amounts of cash into their bank account. While that last one might sound like a good thing, it really isn’t.
$[para]. Apparently, both pieces of code share the same constants (0x11111111, 0x22222222, 0x33333333, 0x44444444), but also implement identical algorithms to decrypt data, summarized in the python function below. $[para].
$[para]. Once the file is downloaded, it is decrypted and then run on the system from a folder like the one identified below where wgsdgsdgdsgsd.exe is the malicious file:. $[para].
one of them attracted our attention because it implements a bypass for security solutions we have never seen before. in the first stage of the attack, the decrypted shellcode executed by the exploit downloads and executes a special dll file. this is internally called yay_release.dll.
As with most Emotet email-borne attacks, if the attachment is opened with macros enabled, an obfuscated VBA macro script opens Powershell and installs an Emotet downloader in the background. The extracted macros are using the same obfuscation technique as other Emotet emails observed in the past few weeks,” IBM X-Force analysts said. It’s not just Emotet that is looking to sow infections on the back of the growing threat.
ShadowPad connection. While investigating this case, we worked with several companies that had been abused in this wave of supply chain attacks. Our joint investigation revealed that the attackers deployed several tools on an attacked network, including a trojanized linker and a powerful backdoor packed with a recent version of VMProtect.
The sites and servers on this list do not seem to have anything in common. Even though the scanned servers do not necessarily look like potential final victims, it is likely that the attackers scanned different resources to find a server that could be used to establish a foothold for hosting the attackers’ tools and, subsequently, to develop the attack. Part of the sites scanned may have been of interest to the attackers as candidates for hosting waterhole resources.
Energetic Bear/Crouching Yeti is a widely known APT group active since at least 2010. The group tends to attack different companies with a strong focus on the energy and industrial sectors. Companies attacked by Energetic Bear/Crouching Yeti are geographically distributed worldwide with a more obvious concentration in Europe and the US.
Its main executable file is a Bash script that consists of only four lines of code. All that it does is decrypt and run another file that it brings along with it, which in turn downloads, decrypts, and executes another file, which does exactly the same. In the end, this nesting doll of various malware installs several AdWare programs, hides them well and registers them to run at startup.
$[para]. Yesterday, Jens atom Steube, who is best known as the author of (ocl)hashcat – a GPU accelerated password recovery tool, released his Gauss cracker as open source software under a GPL license. This is a major breakthrough towards solving the Gauss encryption scheme because of the speeds it achieves: 489k c/s on a AMD Radeon HD 7970 card.
If youre wondering, this is over 30 times faster than an AMD FX 8120 CPU. You can download the sources and Linux binary from Jens ‘hashcat’ page. Happy New (Cracking) Year!
The Networking has been made easier with Gin O’Clock, a one-hour break in the afternoon schedule (on both conference days), which was especially dedicated for human interaction and socialization in the intimate atmosphere of the conference bar. A traditional red double-decker bus was there to provide British ale, cider and Pimm’s; every attendee was also offered a free glass of gin & tonic. Some of The Materials have already been published and they are available at Slideshare.
This year’s Badge is not only extremely handsome, but also may turn out to be very handy, at least for hardware-oriented researchers, as it happens to be a BusBlaster v3 board, especially customized for 44CON (you can find the full specification here). This small cute thingy can be used to program and debug embedded ARM devices. The Talks.